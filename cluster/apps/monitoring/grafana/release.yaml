---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.56.5
      sourceRef:
        kind: HelmRepository
        name: chart-grafana
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    rbac:
      pspEnabled: false
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_FULL_DATE: "DD.MM.YYYY hh:mm:ss"
      GF_SECURITY_ALLOW_EMBEDDING: true
    envFromSecrets:
      - name: grafana-auth-secrets
    grafana.ini:
      auth:
        signout_redirect_url: "https://auth.${SECRET_DOMAIN}/application/o/grafana/end-session/"
        oauth_auto_login: true
        oauth_allow_insecure_email_lookup: true
      auth.generic_oauth:
        name: Authentik
        enabled: true
        client_id: # Set by env vars
        client_secret: # Set by env vars
        scopes: "openid email profile"
        auth_url: "https://auth.${SECRET_DOMAIN}/application/o/authorize/"
        token_url: "https://auth.${SECRET_DOMAIN}/application/o/token/"
        api_url: "https://auth.${SECRET_DOMAIN}/application/o/userinfo/"
        role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
      auth.basic:
        enabled: false
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
        filters: auth:debug
      grafana_net:
        url: https://grafana.net
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        node-exporter-full:
          gnetId: 1860
          revision: 30
          datasource: Prometheus
        postgresql:
          gnetId: 9628
          revision: 7
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    imageRenderer:
      enabled: true
      replicas: 3
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        hajimari.io/appName: Grafana
        hajimari.io/icon: simple-icons:grafana
        external-dns.alpha.kubernetes.io/target: "${CLOUDFLARE_DDNS_RECORD}"
      hosts:
        - &host grafana.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
